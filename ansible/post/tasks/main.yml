---
- name: Post Installation Tasks (Approving CSRs, Setting up Node Labels, Installation of RSCT Daemonset, Setup NFS storage)
  hosts: all
  vars_files:
    - ../vars/main.yml

  tasks:
  - name: Install Pre-requisites
    pip:
      name:
        - kubernetes
        - openshift

  - name: Populate /etc/environment
    lineinfile:
      path: "/etc/environment"
      state: present
      regexp: "^HTTPS_PROXY="
      line: "HTTPS_PROXY=http://{{ nfs_server }}:3128"
    become: yes

  - name: Approve and Issue CSRs for Power Workers only
    shell: |
      chmod +x ../files/approve_and_issue.sh
      ../files/approve_and_issue.sh {{ nfs_server }} {{ power_worker_count }} {{ power_prefix }}

  - name: Fetch the list of projects
    shell: "export HTTPS_PROXY=http://{{ nfs_server }}:3128 && oc get projects"
    register: projects_list
    until: projects_list.stdout.find("openshift-kube-apiserver") != -1
    retries: 20
    delay: 30

  - name: Create powervm-rmc project
    when: projects_list.stdout.find(project_name) == -1
    shell: |
      export HTTPS_PROXY=http://{{ nfs_server }}:3128
      echo {{ lookup('template', '../templates/rmc-ns.yml.j2')}} | oc apply -f -

  - name: Create powervm-rmc serviceaccount
    kubernetes.core.k8s:
      state: present
      proxy: "http://{{ nfs_server }}:3128"
      definition:
        api_version: v1
        kind: ServiceAccount
        metadata:
          name: "{{ rmc_name }}"
          namespace: "{{ project_name }}"

  - name: Add privileged scc to powervm-rmc serviceaccount
    shell: "export HTTPS_PROXY=http://{{ nfs_server }}:3128 && oc adm policy add-scc-to-user -z {{ rmc_name }} privileged -n {{ project_name }}"

  - name: Deploy powervm-rmc DaemonSet
    kubernetes.core.k8s:
      state: present
      proxy: "http://{{ nfs_server }}:3128"
      definition: "{{ lookup('template', '../templates/rsct-daemonset.yml.j2') }}"

  - name: Get Nodes with ppc64le architecture
    shell: "export HTTPS_PROXY=http://{{ nfs_server }}:3128 && oc get nodes -l kubernetes.io/arch=ppc64le | awk '(NR>1) { print $1 }'"
    register: node_names

  - name: Print Node names with ppc64le architecture
    debug:
      msg: "Nodes with ppc64le : {{ node_names.stdout_lines }}"

  - name: Add labels defined in node_labels to ppc64le Nodes
    kubernetes.core.k8s:
      state: present
      proxy: "http://{{ nfs_server }}:3128"
      kind: Node
      name: "{{ item }}"
      definition:
        metadata:
          labels: "{{ node_labels }}"
    with_items: "{{ node_names.stdout_lines }}"

  - name: Setup NFS storage if NFS_SERVER is provided
    import_tasks: nfs_provisioner.yaml
    when: nfs_server != "none"

  - name: Cleanup events in openshift-etcd for cicd
    when: cicd == "true"
    shell: |
      export HTTPS_PROXY=http://{{ nfs_server }}:3128 && oc delete events --all=true -n openshift-etcd