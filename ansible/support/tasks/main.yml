---
- hosts: all
  vars_files:
    - ../vars/main.yml
  handlers:
  - import_tasks: ../handlers/main.yml

  ####################################################################################
  # Verify and Validate prior to starting execution
  pre_tasks:
  - name: Verify Ansible version.
    assert:
      that: "ansible_version.full is version_compare('2.12', '>=')"
      msg: >
          "You must update Ansible to at least 2.12"

  ####################################################################################
  tasks:

  - name: Install needed packages
    package:
      name:
      - bind-utils
      - firewalld
      - httpd
      - vim
      - bash-completion
#      - libselinux-python
      - podman
      - nfs-utils
      - git
      state: present

  - name: Copy httpd conf file
    copy:
      src: ../files/httpd.conf
      dest: /etc/httpd/conf/httpd.conf
    notify:
      - restart httpd

  - name: Create Apache directories for installing
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
      - /var/www/html/ignition

  - name: Start firewalld service
    systemd:
      name: firewalld
      state: started
      enabled: yes

  - name: Open up firewall ports
    firewalld:
      permanent: yes
      immediate: yes
      state: enabled
      port: "{{ item.port }}/{{ item.proto }}"
    run_once: true
    with_items:
      - "{{ ports }}"

  - name: Best effort SELinux repair - Apache
    shell: "restorecon -vR /var/www/html || true"

  - name: Systemd daemon reload
    systemd:
      daemon_reload: yes

  - name: Starting services
    service:
      name: "httpd"
      enabled: yes
      state: started

  - name: Delete OCP4 files, if requested, to download again
    file:
      state: absent
      path: "{{ item }}"
    with_items:
      - "/usr/local/src/openshift-client-linux.tar.gz"
      - "/usr/local/src/openshift-install-linux.tar.gz"

  - name: Preparing OCP client
    when: ocp_client is defined
    block:
    - name: Downloading OCP4 client
      get_url:
        url: "{{ ocp_client }}"
        dest: /usr/local/src/openshift-client-linux.tar.gz

    - name: Unarchiving OCP4 client
      unarchive:
        src: /usr/local/src/openshift-client-linux.tar.gz
        dest: /usr/local/bin
        remote_src: yes

  - name: Removing files that are not needed
    file:
      path: /usr/local/bin/README.md
      state: absent

  - name: Set the local resolv.conf file
    template:
      src: ../templates/resolv.conf.j2
      dest: /etc/resolv.conf

  - name: Restarting NetworkManager
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - NetworkManager

  - name: Enable restart always for HTTPD
    block: 
      - name: Create dropin directory for services
        file:
          path: /etc/systemd/system/httpd.service.d
          state: directory
          mode: 0755

      - name: Copy restart conf file to the services dropin directory
        copy:
          src: ../files/restart.conf
          dest: /etc/systemd/system/httpd.service.d/restart.conf

      - name: restart services
        service:
          name: "httpd"
          state: restarted
          daemon_reload: yes

  - name: Download the ignition file to http server
    block:
    - name: Downloading the ignition file
      get_url:
        url: "{{ openshift_machine_config_url }}"
        dest: /var/www/html/worker.ign
        validate_certs: false
        headers: "Accept: application/vnd.coreos.ignition+json;version=3.2.0"
      environment:
        https_proxy: http://{{ vpc_support_server_ip }}:3128

    - name: Make ignition file readable
      ansible.builtin.file:
        path: /var/www/html/
        owner: nobody
        group: nobody
        mode: u+rw,g-rx,o-rx

    - name: Make ignition file readable
      ansible.builtin.file:
        path: /var/www/html/worker.ign
        owner: nobody
        group: nobody
        mode: u+rw,g-rx,o-rx
